{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/jupyter-matplotlib/css/mpl_widget.css","webpack://@jupyterlab/application-top/./node_modules/jupyter-matplotlib/lib/utils.js","webpack://@jupyterlab/application-top/./node_modules/jupyter-matplotlib/lib/mpl_widget.js","webpack://@jupyterlab/application-top/./node_modules/jupyter-matplotlib/css/mpl_widget.css?89e6","webpack://@jupyterlab/application-top/./node_modules/jupyter-matplotlib/lib/toolbar_widget.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","get_mouse_position","event","targ","boundingRect","getBoundingClientRect","x","clientX","left","y","clientY","top","get_simple_keys","original","Object","keys","reduce","obj","key","getContext","canvas","context","getModifiers","mods","ctrlKey","altKey","shiftKey","metaKey","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","MPLCanvasModel","DOMWidgetModel","defaults","assign","super","_model_name","_view_name","_model_module","_view_module","_model_module_version","_view_module_version","header_visible","footer_visible","toolbar","toolbar_visible","toolbar_position","resizable","capture_scroll","pan_zoom_throttle","_data_url","_size","_figure_label","_message","_cursor","_image_mode","_rubberband_x","_rubberband_y","_rubberband_width","_rubberband_height","initialize","attributes","options","this","offscreen_canvas","document","createElement","offscreen_context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","requested_size","resize_requested","ratio","window","devicePixelRatio","resize_canvas","_init_image","on","on_comm_message","bind","_for_each_view","view","update_canvas","drawImage","image","update_disabled","send_initialization_message","get","comm_live","set","disabled","sync","method","model","attrs","send_message","type","message","send","dpi_ratio","device_pixel_ratio","send_draw_message","waiting_for_image","handle_save","save","href","toDataURL","download","body","appendChild","click","removeChild","handle_resize","msg","resize_and_update_canvas","size","resize","width","height","handle_rubberband","x0","y0","x1","y1","Math","floor","min","abs","save_changes","handle_draw","_msg","handle_binary","buffers","url_creator","URL","webkitURL","buffer","Uint8Array","ArrayBuffer","isView","blob","Blob","image_url","createObjectURL","src","revokeObjectURL","handle_history_buttons","handle_navigate_mode","evt","JSON","parse","data","msg_type","callback","console","log","Image","onload","style","top_canvas","canvas_div","clearRect","dataUrl","view_id","views","remove","serializers","deserialize","unpack_models","MPLCanvasView","DOMWidgetView","render","resizing","resize_handle_size","el","classList","add","figure","_init_header","_init_canvas","_init_toolbar","_init_footer","_resize_event","resize_event","_stop_resize_event","stop_resize_event","addEventListener","toolbar_view","fade_in","fade_out","model_events","_update_header_visible","_update_footer_visible","_update_toolbar_visible","_update_toolbar_position","_update_figure_label","_update_message","_update_cursor","header","display","footer","set_visibility","textContent","canvas_container","position","clear","key_event","setAttribute","zIndex","mouse_event","throttle","preventDefault","top_context","strokeStyle","_e","stopPropagation","create_child_view","stretch","lineWidth","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","strokeRect","gradient","createLinearGradient","addColorStop","fillStyle","globalAlpha","beginPath","moveTo","lineTo","closePath","fill","stroke","restore","cursor","String","name","canvas_pos","deltaY","focus","button","modifiers","guiEvent","new_size","_key","removeEventListener","insert","singleton","update","ToolbarModel","toolitems","button_style","_current_action","ToolbarView","constructor","arguments","visibility","parameters","create_toolbar","toolbar_items","buttons","toolbar_ind","tooltip","method_name","outline","toolbar_button_onclick","icon","set_position","set_buttons_style","bottom","right","_event","opacity","class_map","primary","success","info","warning","danger","class_name","on_some_change"],"mappings":"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","file":"5689.8fd8e510cdf6a93c5e9a.js?v=8fd8e510cdf6a93c5e9a","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jupyter-matplotlib {\\n    width: auto;\\n    height: auto;\\n    flex: 1 1 auto;\\n}\\n\\n/* Toolbar */\\n\\n.jupyter-matplotlib-toolbar {\\n    position: absolute;\\n    overflow: visible;\\n    z-index: 100;\\n}\\n\\n.jupyter-matplotlib-toolbar-fadein-fadeout {\\n    transition: visibility 0.5s linear, opacity 0.5s linear;\\n}\\n\\n.jupyter-matplotlib-button {\\n    width: calc(var(--jp-widgets-inline-width-tiny) / 2 - 2px);\\n    padding: 0 !important;\\n}\\n\\n/* Figure */\\n\\n.jupyter-matplotlib-figure {\\n    width: fit-content;\\n    height: auto;\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.jupyter-matplotlib-canvas-container {\\n    overflow: auto;\\n}\\n\\n.jupyter-matplotlib-canvas-div {\\n    margin: 2px;\\n    flex: 1 1 auto;\\n}\\n\\n.jupyter-matplotlib-header {\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n.jupyter-matplotlib-footer {\\n    width: 100%;\\n    text-align: center;\\n    min-height: var(--jp-widgets-inline-height);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/jupyter-matplotlib/css/mpl_widget.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA,YAAY;;AAEZ;IACI,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,uDAAuD;AAC3D;;AAEA;IACI,0DAA0D;IAC1D,qBAAqB;AACzB;;AAEA,WAAW;;AAEX;IACI,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,2CAA2C;AAC/C\",\"sourcesContent\":[\".jupyter-matplotlib {\\n    width: auto;\\n    height: auto;\\n    flex: 1 1 auto;\\n}\\n\\n/* Toolbar */\\n\\n.jupyter-matplotlib-toolbar {\\n    position: absolute;\\n    overflow: visible;\\n    z-index: 100;\\n}\\n\\n.jupyter-matplotlib-toolbar-fadein-fadeout {\\n    transition: visibility 0.5s linear, opacity 0.5s linear;\\n}\\n\\n.jupyter-matplotlib-button {\\n    width: calc(var(--jp-widgets-inline-width-tiny) / 2 - 2px);\\n    padding: 0 !important;\\n}\\n\\n/* Figure */\\n\\n.jupyter-matplotlib-figure {\\n    width: fit-content;\\n    height: auto;\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.jupyter-matplotlib-canvas-container {\\n    overflow: auto;\\n}\\n\\n.jupyter-matplotlib-canvas-div {\\n    margin: 2px;\\n    flex: 1 1 auto;\\n}\\n\\n.jupyter-matplotlib-header {\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n.jupyter-matplotlib-footer {\\n    width: 100%;\\n    text-align: center;\\n    min-height: var(--jp-widgets-inline-height);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Get mouse position relative to target\nexport function get_mouse_position(event, targ) {\n    const boundingRect = targ.getBoundingClientRect();\n    return {\n        x: event.clientX - boundingRect.left,\n        y: event.clientY - boundingRect.top,\n    };\n}\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nexport function get_simple_keys(original) {\n    return Object.keys(original).reduce((obj, key) => {\n        if (typeof original[key] !== 'object') {\n            obj[key] = original[key];\n        }\n        return obj;\n    }, {});\n}\n// taken from ipycanvas (https://github.com/martinRenou/ipycanvas)\n// Helpful for getting a drawing context while avoiding typescript errors about a context\n// possibly being null.\n// https://github.com/martinRenou/ipycanvas/blob/8c91ec4f634ff3661f594872e8050cf27d6db0c6/src/widget.ts#L23-L29\nexport function getContext(canvas) {\n    const context = canvas.getContext('2d');\n    if (context === null) {\n        throw 'Could not create 2d context.';\n    }\n    return context;\n}\nexport function getModifiers(event) {\n    const mods = [];\n    if (event.ctrlKey) {\n        mods.push('ctrl');\n    }\n    if (event.altKey) {\n        mods.push('alt');\n    }\n    if (event.shiftKey) {\n        mods.push('shift');\n    }\n    if (event.metaKey) {\n        mods.push('meta');\n    }\n    return mods;\n}\n//# sourceMappingURL=utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { throttle } from 'lodash';\nimport { DOMWidgetModel, DOMWidgetView, unpack_models, } from '@jupyter-widgets/base';\nimport * as utils from './utils';\nimport { MODULE_VERSION } from './version';\nexport class MPLCanvasModel extends DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: 'MPLCanvasModel', _view_name: 'MPLCanvasView', _model_module: 'jupyter-matplotlib', _view_module: 'jupyter-matplotlib', _model_module_version: '^' + MODULE_VERSION, _view_module_version: '^' + MODULE_VERSION, header_visible: true, footer_visible: true, toolbar: null, toolbar_visible: 'fade-in-fade-out', toolbar_position: 'horizontal', resizable: true, capture_scroll: false, pan_zoom_throttle: 33, _data_url: null, _size: [0, 0], _figure_label: 'Figure', _message: '', _cursor: 'pointer', _image_mode: 'full', _rubberband_x: 0, _rubberband_y: 0, _rubberband_width: 0, _rubberband_height: 0 });\n    }\n    initialize(attributes, options) {\n        super.initialize(attributes, options);\n        this.offscreen_canvas = document.createElement('canvas');\n        this.offscreen_context = utils.getContext(this.offscreen_canvas);\n        // use `as any` to avoid typescript complaining that\n        // these browser specific attributes don't exist.\n        const context = this.offscreen_context;\n        const backingStore = context.backingStorePixelRatio ||\n            context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            1;\n        this.requested_size = null;\n        this.resize_requested = false;\n        this.ratio = (window.devicePixelRatio || 1) / backingStore;\n        this.resize_canvas();\n        this._init_image();\n        this.on('msg:custom', this.on_comm_message.bind(this));\n        this.on('change:resizable', () => {\n            this._for_each_view((view) => {\n                view.update_canvas();\n            });\n        });\n        this.on('change:_size', () => {\n            this.resize_canvas();\n            this.offscreen_context.drawImage(this.image, 0, 0);\n        });\n        this.on('comm_live_update', this.update_disabled.bind(this));\n        this.update_disabled();\n        this.send_initialization_message();\n    }\n    get size() {\n        return this.get('_size');\n    }\n    get disabled() {\n        return !this.comm_live;\n    }\n    update_disabled() {\n        this.set('resizable', !this.disabled);\n    }\n    sync(method, model, options = {}) {\n        // Make sure we don't sync the data_url, we don't need it to be synced\n        if (options.attrs) {\n            delete options.attrs['_data_url'];\n        }\n        super.sync(method, model, options);\n    }\n    send_message(type, message = {}) {\n        message['type'] = type;\n        this.send(message, {});\n    }\n    send_initialization_message() {\n        if (this.ratio !== 1) {\n            this.send_message('set_dpi_ratio', { dpi_ratio: this.ratio });\n            this.send_message('set_device_pixel_ratio', {\n                device_pixel_ratio: this.ratio,\n            });\n        }\n        this.send_message('refresh');\n        this.send_message('send_image_mode');\n        this.send_message('initialized');\n    }\n    send_draw_message() {\n        if (!this.waiting_for_image) {\n            this.waiting_for_image = true;\n            this.send_message('draw');\n        }\n    }\n    handle_save() {\n        const save = document.createElement('a');\n        save.href = this.offscreen_canvas.toDataURL();\n        save.download = this.get('_figure_label') + '.png';\n        document.body.appendChild(save);\n        save.click();\n        document.body.removeChild(save);\n    }\n    handle_resize(msg) {\n        this.resize_canvas();\n        this.offscreen_context.drawImage(this.image, 0, 0);\n        if (!this.resize_requested) {\n            this._for_each_view((view) => {\n                view.resize_and_update_canvas(this.size);\n            });\n        }\n        this.send_message('refresh');\n        this.resize_requested = false;\n        if (this.requested_size !== null) {\n            // Requesting saved resize\n            this.resize(this.requested_size[0], this.requested_size[1]);\n            this.requested_size = null;\n        }\n    }\n    /*\n     * Request a resize to the backend\n     */\n    resize(width, height) {\n        // Do not request a super small size, as it seems to break the back-end\n        if (width <= 5 || height <= 5) {\n            return;\n        }\n        this._for_each_view((view) => {\n            // Do an initial resize of each view, stretching the old canvas.\n            view.resize_and_update_canvas([width, height]);\n        });\n        if (this.resize_requested) {\n            // If a resize was already requested, save the requested size for later\n            this.requested_size = [width, height];\n        }\n        else {\n            this.resize_requested = true;\n            this.send_message('resize', { width: width, height: height });\n        }\n    }\n    /*\n     * Resize the offscreen canvas\n     */\n    resize_canvas() {\n        this.offscreen_canvas.width = this.size[0] * this.ratio;\n        this.offscreen_canvas.height = this.size[1] * this.ratio;\n    }\n    handle_rubberband(msg) {\n        let x0 = msg['x0'] / this.ratio;\n        let y0 = (this.offscreen_canvas.height - msg['y0']) / this.ratio;\n        let x1 = msg['x1'] / this.ratio;\n        let y1 = (this.offscreen_canvas.height - msg['y1']) / this.ratio;\n        x0 = Math.floor(x0) + 0.5;\n        y0 = Math.floor(y0) + 0.5;\n        x1 = Math.floor(x1) + 0.5;\n        y1 = Math.floor(y1) + 0.5;\n        this.set('_rubberband_x', Math.min(x0, x1));\n        this.set('_rubberband_y', Math.min(y0, y1));\n        this.set('_rubberband_width', Math.abs(x1 - x0));\n        this.set('_rubberband_height', Math.abs(y1 - y0));\n        this.save_changes();\n        this._for_each_view((view) => {\n            view.update_canvas();\n        });\n    }\n    handle_draw(_msg) {\n        // Request the server to send over a new figure.\n        this.send_draw_message();\n    }\n    handle_binary(msg, buffers) {\n        const url_creator = window.URL || window.webkitURL;\n        const buffer = new Uint8Array(ArrayBuffer.isView(buffers[0]) ? buffers[0].buffer : buffers[0]);\n        const blob = new Blob([buffer], { type: 'image/png' });\n        const image_url = url_creator.createObjectURL(blob);\n        // Free the memory for the previous frames\n        if (this.image.src) {\n            url_creator.revokeObjectURL(this.image.src);\n        }\n        this.image.src = image_url;\n        this.set('_data_url', this.offscreen_canvas.toDataURL());\n        this.waiting_for_image = false;\n    }\n    handle_history_buttons(msg) {\n        // No-op\n    }\n    handle_navigate_mode(msg) {\n        // TODO: Remove _current_action property in the toolbar and use\n        // this message instead to know which is the current mode/which\n        // button to toggle?\n    }\n    on_comm_message(evt, buffers) {\n        const msg = JSON.parse(evt.data);\n        const msg_type = msg['type'];\n        let callback;\n        // Call the  'handle_{type}' callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            callback = this['handle_' + msg_type].bind(this);\n        }\n        catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n        if (callback) {\n            callback(msg, buffers);\n        }\n    }\n    _init_image() {\n        this.image = new Image();\n        this.image.onload = () => {\n            // In case of an embedded widget, the initial size is not correct\n            // and we are not receiving any resize event from the server\n            if (this.disabled) {\n                this.offscreen_canvas.width = this.image.width;\n                this.offscreen_canvas.height = this.image.height;\n                this.offscreen_context.drawImage(this.image, 0, 0);\n                this._for_each_view((view) => {\n                    // TODO Make this part of the CanvasView API?\n                    // It feels out of place in the model\n                    view.canvas.width = this.image.width / this.ratio;\n                    view.canvas.height = this.image.height / this.ratio;\n                    view.canvas.style.width = view.canvas.width + 'px';\n                    view.canvas.style.height = view.canvas.height + 'px';\n                    view.top_canvas.width = this.image.width / this.ratio;\n                    view.top_canvas.height = this.image.height / this.ratio;\n                    view.top_canvas.style.width = view.top_canvas.width + 'px';\n                    view.top_canvas.style.height =\n                        view.top_canvas.height + 'px';\n                    view.canvas_div.style.width = view.canvas.width + 'px';\n                    view.canvas_div.style.height = view.canvas.height + 'px';\n                    view.update_canvas(true);\n                });\n                return;\n            }\n            // Full images could contain transparency (where diff images\n            // almost always do), so we need to clear the canvas so that\n            // there is no ghosting.\n            if (this.get('_image_mode') === 'full') {\n                this.offscreen_context.clearRect(0, 0, this.offscreen_canvas.width, this.offscreen_canvas.height);\n            }\n            this.offscreen_context.drawImage(this.image, 0, 0);\n            this._for_each_view((view) => {\n                view.update_canvas();\n            });\n        };\n        const dataUrl = this.get('_data_url');\n        if (dataUrl !== null) {\n            this.image.src = dataUrl;\n        }\n    }\n    _for_each_view(callback) {\n        for (const view_id in this.views) {\n            this.views[view_id].then((view) => {\n                callback(view);\n            });\n        }\n    }\n    remove() {\n        this.send_message('closing');\n    }\n}\nMPLCanvasModel.serializers = Object.assign(Object.assign({}, DOMWidgetModel.serializers), { toolbar: { deserialize: unpack_models } });\nexport class MPLCanvasView extends DOMWidgetView {\n    render() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.resizing = false;\n            this.resize_handle_size = 20;\n            this.el.classList.add('jupyter-matplotlib');\n            this.figure = document.createElement('div');\n            this.figure.classList.add('jupyter-matplotlib-figure');\n            this.el.appendChild(this.figure);\n            this._init_header();\n            this._init_canvas();\n            yield this._init_toolbar();\n            this._init_footer();\n            this._resize_event = this.resize_event.bind(this);\n            this._stop_resize_event = this.stop_resize_event.bind(this);\n            window.addEventListener('mousemove', this._resize_event);\n            window.addEventListener('mouseup', this._stop_resize_event);\n            this.el.addEventListener('mouseenter', () => {\n                this.toolbar_view.fade_in();\n            });\n            this.el.addEventListener('mouseleave', () => {\n                this.toolbar_view.fade_out();\n            });\n            this.model_events();\n        });\n    }\n    model_events() {\n        this.model.on('change:header_visible', this._update_header_visible.bind(this));\n        this.model.on('change:footer_visible', this._update_footer_visible.bind(this));\n        this.model.on('change:toolbar_visible', this._update_toolbar_visible.bind(this));\n        this.model.on('change:toolbar_position', this._update_toolbar_position.bind(this));\n        this.model.on('change:_figure_label', this._update_figure_label.bind(this));\n        this.model.on('change:_message', this._update_message.bind(this));\n        this.model.on('change:_cursor', this._update_cursor.bind(this));\n    }\n    _update_header_visible() {\n        this.header.style.display = this.model.get('header_visible')\n            ? ''\n            : 'none';\n    }\n    _update_footer_visible() {\n        this.footer.style.display = this.model.get('footer_visible')\n            ? ''\n            : 'none';\n    }\n    _update_toolbar_visible() {\n        this.toolbar_view.set_visibility(this.model.get('toolbar_visible'));\n    }\n    _update_toolbar_position() {\n        this.model\n            .get('toolbar')\n            .set('position', this.model.get('toolbar_position'));\n    }\n    _init_header() {\n        this.header = document.createElement('div');\n        this.header.classList.add('jupyter-widgets', 'widget-label', 'jupyter-matplotlib-header');\n        this._update_header_visible();\n        this._update_figure_label();\n        this.figure.appendChild(this.header);\n    }\n    _update_figure_label() {\n        this.header.textContent = this.model.get('_figure_label');\n    }\n    _init_canvas() {\n        const canvas_container = document.createElement('div');\n        canvas_container.classList.add('jupyter-widgets', 'jupyter-matplotlib-canvas-container');\n        this.figure.appendChild(canvas_container);\n        const canvas_div = (this.canvas_div = document.createElement('div'));\n        canvas_div.style.position = 'relative';\n        canvas_div.style.clear = 'both';\n        canvas_div.classList.add('jupyter-widgets', 'jupyter-matplotlib-canvas-div');\n        canvas_div.addEventListener('keydown', this.key_event('key_press'));\n        canvas_div.addEventListener('keyup', this.key_event('key_release'));\n        // this is important to make the div 'focusable'\n        canvas_div.setAttribute('tabindex', '0');\n        canvas_container.appendChild(canvas_div);\n        const canvas = (this.canvas = document.createElement('canvas'));\n        canvas.style.display = 'block';\n        canvas.style.position = 'absolute';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        canvas.style.zIndex = '0';\n        this.context = utils.getContext(canvas);\n        const top_canvas = (this.top_canvas = document.createElement('canvas'));\n        top_canvas.style.display = 'block';\n        top_canvas.style.position = 'absolute';\n        top_canvas.style.left = '0';\n        top_canvas.style.top = '0';\n        top_canvas.style.zIndex = '1';\n        top_canvas.addEventListener('dblclick', this.mouse_event('dblclick'));\n        top_canvas.addEventListener('mousedown', this.mouse_event('button_press'));\n        top_canvas.addEventListener('mouseup', this.mouse_event('button_release'));\n        top_canvas.addEventListener('mousemove', throttle(this.mouse_event('motion_notify'), this.model.get('pan_zoom_throttle')));\n        top_canvas.addEventListener('mouseenter', this.mouse_event('figure_enter'));\n        top_canvas.addEventListener('mouseleave', this.mouse_event('figure_leave'));\n        top_canvas.addEventListener('wheel', throttle(this.mouse_event('scroll'), this.model.get('pan_zoom_throttle')));\n        top_canvas.addEventListener('wheel', (event) => {\n            if (this.model.get('capture_scroll')) {\n                event.preventDefault();\n            }\n        });\n        canvas_div.appendChild(canvas);\n        canvas_div.appendChild(top_canvas);\n        this.top_context = utils.getContext(top_canvas);\n        this.top_context.strokeStyle = 'rgba(0, 0, 0, 255)';\n        // Disable right mouse context menu.\n        this.top_canvas.addEventListener('contextmenu', (_e) => {\n            _e.preventDefault();\n            _e.stopPropagation();\n            return false;\n        });\n        this.resize_and_update_canvas(this.model.size);\n    }\n    _init_toolbar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.toolbar_view = (yield this.create_child_view(this.model.get('toolbar')));\n            this.figure.appendChild(this.toolbar_view.el);\n            this._update_toolbar_position();\n            this._update_toolbar_visible();\n        });\n    }\n    /*\n     * Update the canvas view\n     */\n    update_canvas(stretch = false) {\n        if (this.canvas.width === 0 || this.canvas.height === 0) {\n            return;\n        }\n        this.top_context.save();\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (stretch) {\n            this.context.drawImage(this.model.offscreen_canvas, 0, 0, this.canvas.width, this.canvas.height);\n        }\n        else {\n            this.context.drawImage(this.model.offscreen_canvas, 0, 0);\n        }\n        this.top_context.clearRect(0, 0, this.top_canvas.width, this.top_canvas.height);\n        // Draw rubberband\n        if (this.model.get('_rubberband_width') !== 0 &&\n            this.model.get('_rubberband_height') !== 0) {\n            this.top_context.strokeStyle = 'gray';\n            this.top_context.lineWidth = 1;\n            this.top_context.shadowColor = 'black';\n            this.top_context.shadowBlur = 2;\n            this.top_context.shadowOffsetX = 1;\n            this.top_context.shadowOffsetY = 1;\n            this.top_context.strokeRect(this.model.get('_rubberband_x'), this.model.get('_rubberband_y'), this.model.get('_rubberband_width'), this.model.get('_rubberband_height'));\n        }\n        // Draw resize handle\n        if (this.model.get('resizable')) {\n            const gradient = this.top_context.createLinearGradient(\n            // Start\n            this.top_canvas.width - this.resize_handle_size, this.top_canvas.height - this.resize_handle_size, \n            // Stop\n            this.top_canvas.width, this.top_canvas.height);\n            gradient.addColorStop(0, 'white');\n            gradient.addColorStop(1, 'black');\n            this.top_context.fillStyle = gradient;\n            this.top_context.strokeStyle = 'gray';\n            this.top_context.globalAlpha = 0.3;\n            this.top_context.beginPath();\n            this.top_context.moveTo(this.top_canvas.width, this.top_canvas.height);\n            this.top_context.lineTo(this.top_canvas.width, this.top_canvas.height - this.resize_handle_size);\n            this.top_context.lineTo(this.top_canvas.width - this.resize_handle_size, this.top_canvas.height);\n            this.top_context.closePath();\n            this.top_context.fill();\n            this.top_context.stroke();\n        }\n        this.top_context.restore();\n    }\n    _update_cursor() {\n        this.top_canvas.style.cursor = this.model.get('_cursor');\n    }\n    _init_footer() {\n        this.footer = document.createElement('div');\n        this.footer.classList.add('jupyter-widgets', 'widget-label', 'jupyter-matplotlib-footer');\n        this._update_footer_visible();\n        this._update_message();\n        this.figure.appendChild(this.footer);\n    }\n    _update_message() {\n        this.footer.textContent = this.model.get('_message');\n    }\n    resize_and_update_canvas(size) {\n        // Keep the size of the canvas, and rubber band canvas in sync.\n        this.canvas.setAttribute('width', `${size[0] * this.model.ratio}`);\n        this.canvas.setAttribute('height', `${size[1] * this.model.ratio}`);\n        this.canvas.style.width = size[0] + 'px';\n        this.canvas.style.height = size[1] + 'px';\n        this.top_canvas.setAttribute('width', String(size[0]));\n        this.top_canvas.setAttribute('height', String(size[1]));\n        this.canvas_div.style.width = size[0] + 'px';\n        this.canvas_div.style.height = size[1] + 'px';\n        this.update_canvas();\n    }\n    mouse_event(name) {\n        return (event) => {\n            const canvas_pos = utils.get_mouse_position(event, this.top_canvas);\n            if (name === 'scroll') {\n                event['data'] = 'scroll';\n                if (event.deltaY < 0) {\n                    event.step = 1;\n                }\n                else {\n                    event.step = -1;\n                }\n            }\n            if (name === 'button_press') {\n                // If clicking on the resize handle\n                if (canvas_pos.x >=\n                    this.top_canvas.width - this.resize_handle_size &&\n                    canvas_pos.y >=\n                        this.top_canvas.height - this.resize_handle_size &&\n                    this.model.get('resizable')) {\n                    this.resizing = true;\n                    return;\n                }\n                else {\n                    this.canvas.focus();\n                    this.canvas_div.focus();\n                }\n            }\n            if (this.resizing) {\n                // Ignore other mouse events while resizing.\n                return;\n            }\n            if (name === 'motion_notify') {\n                // If the mouse is on the handle, change the cursor style\n                if (canvas_pos.x >=\n                    this.top_canvas.width - this.resize_handle_size &&\n                    canvas_pos.y >=\n                        this.top_canvas.height - this.resize_handle_size) {\n                    this.top_canvas.style.cursor = 'nw-resize';\n                }\n                else {\n                    this.top_canvas.style.cursor = this.model.get('_cursor');\n                }\n            }\n            const x = canvas_pos.x * this.model.ratio;\n            const y = canvas_pos.y * this.model.ratio;\n            this.model.send_message(name, {\n                x: x,\n                y: y,\n                button: event.button,\n                step: event.step,\n                modifiers: utils.getModifiers(event),\n                guiEvent: utils.get_simple_keys(event),\n            });\n        };\n    }\n    resize_event(event) {\n        if (this.resizing) {\n            const new_size = utils.get_mouse_position(event, this.top_canvas);\n            this.model.resize(new_size.x, new_size.y);\n        }\n    }\n    stop_resize_event() {\n        this.resizing = false;\n    }\n    key_event(name) {\n        return (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            // Prevent repeat events\n            if (name === 'key_press') {\n                if (event.key === this._key) {\n                    return;\n                }\n                else {\n                    this._key = event.key;\n                }\n            }\n            if (name === 'key_release') {\n                this._key = null;\n            }\n            let value = '';\n            if (event.ctrlKey && event.key !== 'Control') {\n                value += 'ctrl+';\n            }\n            else if (event.altKey && event.key !== 'Alt') {\n                value += 'alt+';\n            }\n            else if (event.shiftKey && event.key !== 'Shift') {\n                value += 'shift+';\n            }\n            value += 'k' + event.key;\n            this.model.send_message(name, {\n                key: value,\n                guiEvent: utils.get_simple_keys(event),\n            });\n            return false;\n        };\n    }\n    remove() {\n        window.removeEventListener('mousemove', this._resize_event);\n        window.removeEventListener('mouseup', this._stop_resize_event);\n    }\n}\n//# sourceMappingURL=mpl_widget.js.map","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./mpl_widget.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { DOMWidgetModel, DOMWidgetView } from '@jupyter-widgets/base';\nimport { MODULE_VERSION } from './version';\nimport '../css/mpl_widget.css';\nexport class ToolbarModel extends DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: 'ToolbarModel', _view_name: 'ToolbarView', _model_module: 'jupyter-matplotlib', _view_module: 'jupyter-matplotlib', _model_module_version: '^' + MODULE_VERSION, _view_module_version: '^' + MODULE_VERSION, toolitems: [], position: 'left', button_style: '', _current_action: '' });\n    }\n}\nexport class ToolbarView extends DOMWidgetView {\n    constructor() {\n        super(...arguments);\n        this.visibility = 'fade-in-fade-out';\n    }\n    initialize(parameters) {\n        super.initialize(parameters);\n        this.on('comm_live_update', this.update_disabled.bind(this));\n    }\n    render() {\n        this.el.classList.add('jupyter-widgets', 'jupyter-matplotlib-toolbar', 'widget-container', 'widget-box');\n        // Fade-in/fade-out mode by default, the figure will decide\n        this.set_visibility('fade-in-fade-out');\n        this.create_toolbar();\n        this.model_events();\n    }\n    create_toolbar() {\n        const toolbar_items = this.model.get('toolitems');\n        this.toolbar = document.createElement('div');\n        this.toolbar.classList.add('widget-container', 'widget-box');\n        this.el.appendChild(this.toolbar);\n        this.buttons = {};\n        for (const toolbar_ind in toolbar_items) {\n            const name = toolbar_items[toolbar_ind][0];\n            const tooltip = toolbar_items[toolbar_ind][1];\n            const image = toolbar_items[toolbar_ind][2];\n            const method_name = toolbar_items[toolbar_ind][3];\n            if (!name) {\n                continue;\n            }\n            const button = document.createElement('button');\n            button.classList.add('jupyter-matplotlib-button', 'jupyter-widgets', 'jupyter-button');\n            button.setAttribute('href', '#');\n            button.setAttribute('title', tooltip);\n            button.style.outline = 'none';\n            button.addEventListener('click', this.toolbar_button_onclick(method_name));\n            const icon = document.createElement('i');\n            icon.classList.add('center', 'fa', 'fa-fw', 'fa-' + image);\n            button.appendChild(icon);\n            this.buttons[method_name] = button;\n            this.toolbar.appendChild(button);\n        }\n        this.set_position();\n        this.set_buttons_style();\n        this.update_disabled();\n    }\n    get disabled() {\n        return !this.model.comm_live;\n    }\n    update_disabled() {\n        // Disable buttons\n        if (this.disabled) {\n            this.toolbar.style.display = 'none';\n        }\n    }\n    set_position() {\n        const position = this.model.get('position');\n        if (position === 'left' || position === 'right') {\n            this.el.classList.remove('widget-hbox');\n            this.el.classList.add('widget-vbox');\n            this.toolbar.classList.remove('widget-hbox');\n            this.toolbar.classList.add('widget-vbox');\n            this.el.style.top = '3px';\n            this.el.style.bottom = 'auto';\n            if (position === 'left') {\n                this.el.style.left = '3px';\n                this.el.style.right = 'auto';\n            }\n            else {\n                this.el.style.left = 'auto';\n                this.el.style.right = '3px';\n            }\n        }\n        else {\n            this.el.classList.add('widget-hbox');\n            this.el.classList.remove('widget-vbox');\n            this.toolbar.classList.add('widget-hbox');\n            this.toolbar.classList.remove('widget-vbox');\n            this.el.style.right = '3px';\n            this.el.style.left = 'auto';\n            if (position === 'top') {\n                this.el.style.top = '3px';\n                this.el.style.bottom = 'auto';\n            }\n            else {\n                this.el.style.top = 'auto';\n                this.el.style.bottom = '3px';\n            }\n        }\n    }\n    toolbar_button_onclick(name) {\n        return (_event) => {\n            // Special case for pan and zoom as they are toggle buttons\n            if (name === 'pan' || name === 'zoom') {\n                if (this.model.get('_current_action') === name) {\n                    this.model.set('_current_action', '');\n                }\n                else {\n                    this.model.set('_current_action', name);\n                }\n                this.model.save_changes();\n            }\n            this.send({\n                type: 'toolbar_button',\n                name: name,\n            });\n        };\n    }\n    set_visibility(value) {\n        // For backward compatibility with the old API\n        if (typeof value === 'boolean') {\n            value = value ? 'visible' : 'hidden';\n        }\n        this.visibility = value;\n        if (value === 'fade-in-fade-out') {\n            this.el.classList.add('jupyter-matplotlib-toolbar-fadein-fadeout');\n            // Hide it by default\n            this.el.style.visibility = 'hidden';\n            this.el.style.opacity = '0';\n            return;\n        }\n        this.el.classList.remove('jupyter-matplotlib-toolbar-fadein-fadeout');\n        // Always visible\n        if (value === 'visible') {\n            this.el.style.visibility = 'visible';\n            this.el.style.opacity = '1';\n            return;\n        }\n        // Always hidden\n        this.el.style.visibility = 'hidden';\n        this.el.style.opacity = '0';\n    }\n    fade_in() {\n        // This is a no-op if we are not in fade-in/fade-out mode\n        if (this.visibility !== 'fade-in-fade-out') {\n            return;\n        }\n        this.el.style.visibility = 'visible';\n        this.el.style.opacity = '1';\n    }\n    fade_out() {\n        // This is a no-op if we are not in fade-in/fade-out mode\n        if (this.visibility !== 'fade-in-fade-out') {\n            return;\n        }\n        this.el.style.visibility = 'hidden';\n        this.el.style.opacity = '0';\n    }\n    set_buttons_style() {\n        const class_map = {\n            primary: ['mod-primary'],\n            success: ['mod-success'],\n            info: ['mod-info'],\n            warning: ['mod-warning'],\n            danger: ['mod-danger'],\n        };\n        for (const name in this.buttons) {\n            const button = this.buttons[name];\n            for (const class_name in class_map) {\n                button.classList.remove(class_map[class_name]);\n            }\n            button.classList.remove('mod-active');\n            const class_name = this.model.get('button_style');\n            if (class_name !== '') {\n                button.classList.add(class_map[class_name]);\n            }\n            if (name === this.model.get('_current_action')) {\n                button.classList.add('mod-active');\n            }\n        }\n    }\n    model_events() {\n        this.model.on('change:position', this.set_position.bind(this));\n        this.model.on_some_change(['button_style', '_current_action'], this.set_buttons_style, this);\n    }\n}\n//# sourceMappingURL=toolbar_widget.js.map"],"sourceRoot":""}